name: deploy
on:
  push:
    branches:
      - production
      - mainnet
      - mainnet2

jobs:
  set_environment:
    outputs:
      env_name: ${{ steps.setenv.outputs.env_name }}
    runs-on: ubuntu-latest
    steps:
    - id: setenv
      run: echo "::set-output name=env_name::${GITHUB_REF#refs/heads/}"

  build:
    name: Deploy
    runs-on: ubuntu-latest
    needs: set_environment
    environment:
      name: ${{ needs.set_environment.outputs.env_name }}
    defaults:
      run:
        working-directory: ./packages/frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install node dependencies
        run: yarn install

      - name: Build the frontend app
        env:
          PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
          REACT_APP_NETWORK: ${{ secrets.REACT_APP_NETWORK }}
          REACT_APP_IPFS_BUILD: ${{ secrets.REACT_APP_IPFS_BUILD }}
          REACT_APP_BNC_DAPP_ID: ${{ secrets.REACT_APP_BNC_DAPP_ID }}
          REACT_APP_ENABLED_CHAINS: ${{ secrets.REACT_APP_ENABLED_CHAINS }}
          REACT_APP_ENABLED_TOKENS: ${{ secrets.REACT_APP_ENABLED_TOKENS }}
          REACT_APP_FORTMATIC_KEY: ${{ secrets.REACT_APP_FORTMATIC_KEY }}
          REACT_APP_PORTIS_ID: ${{ secrets.REACT_APP_PORTIS_ID }}
          REACT_APP_DISABLED_ROUTES: ${{ secrets.REACT_APP_DISABLED_ROUTES }}
          REACT_APP_WARNING_ROUTES: ${{ secrets.REACT_APP_WARNING_ROUTES }}
          REACT_APP_DISABLE_NATIVE_ASSET_TRANSFERS: ${{ secrets.REACT_APP_DISABLE_NATIVE_ASSET_TRANSFERS }}
        run: yarn build

      - name: Pin to IPFS on Pinata
        id: upload
        uses: anantaramdas/ipfs-pinata-deploy-action@9f9c3b42b5d360352c4b768d98aff1309d62faa0
        with:
          pin-name: Hop ${{ github.sha }}
          path: './packages/frontend/build'
          verbose: false
          pinata-api-key: ${{ secrets.IPFS_DEPLOY_PINATA__API_KEY }}
          pinata-secret-api-key: ${{ secrets.IPFS_DEPLOY_PINATA__SECRET_API_KEY }}

      - name: Pin to Crust
        uses: crustio/ipfs-crust-action@v2.0.3
        if: "contains(github.ref, 'production')"
        continue-on-error: true
        timeout-minutes: 2
        with:
          cid: ${{ steps.upload.outputs.hash }}
          seeds: ${{ secrets.CRUST_SEEDS }}

      - name: Update CloudFlare DNS with new IPFS hash
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          RECORD_DOMAIN: 'hop.exchange'
          RECORD_NAME: ${{ secrets.IPFS_DEPLOY_DNSLINK_SUBDOMAIN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        uses: textileio/cloudflare-update-dnslink@30414a408191218c8259e932ebdf4cbb7c652fe8
        with:
          cid: ${{ steps.upload.outputs.hash }}
